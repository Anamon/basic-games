1 ! CONCORD
2 OPTION BASE 1 :: DIM K(3,3),D(8)
3 DISPLAY AT(3,12)ERASE ALL:"FUTURA": :TAB(11);"PRESENTS": : :
4 DISPLAY AT(13,7):"STARSHIP CONCORD": :TAB(14);"BY": : :TAB(10);"SAM PINCUS";
5 DEF SQ$(I)=SEG$(Q$,8*I-7,8) :: DEF SG$(I)=SEG$(G$,8*I-7,8) :: DEF FND(J)=SQR((K(I,1)-S1)^2+(K(I,2)-S2)^2)
6 DEF RA(X)=INT(RND*X)+1 :: DEF F$=CHR$(104+K3+8*B3) :: DEF K$(X)=STR$(K(I,X))
7 DEF D$(I)=SEG$("WARP ENGINESVIEW SCANNERL.R. SENSORSPHASER CNTRLPHOTON TUBESIMPULSE POWRSHIELD CNTRL COMPUTER   ",I*12-11,12)&" "
8 CM$="NPTSRCVXW" :: NM$="12345678" :: CO$="CONCORD" :: DI$="DIRECTION" :: S$="STAR"
9 B$="BASE" :: TO$="TORPEDO" :: ZA$="SHIELDS " :: ZB$="COURSE(1-9)?"
10 ZC$="COMMAND?" :: DN$="DENEBAN" :: A$="WVLPTISC"
11 FOR I=1 TO 8 :: CALL CHARPAT(ASC(SEG$(A$,I,1)),C$) :: CALL CHAR(119+I,C$) :: CALL CHAR(127+I,C$) :: NEXT I
12 A$=RPT$("F",16) :: FOR I=1 TO 4 :: CALL CHAR(107+I,A$) :: CALL CHAR(115+I,A$) :: CALL CHARPAT(47+I,C$)
13 CALL CHAR(103+I,C$) :: CALL CHAR(111+I,C$) :: NEXT I
14 CALL CHAR(136,"00003C7E7E3C00007F4141414141417F00000000000000000000001818000000")
15 CALL SCREEN(4) :: DISPLAY AT(12,9)ERASE ALL:"INITIALIZING":TAB(9);"PLEASE WAIT"
16 CALL CHAR(96,"0000000000000000000028107C10280000446C5454541000003C08087C7C3C00")
17 BL$=CHR$(96) :: SB$=CHR$(97) :: KL$=CHR$(98) :: SH$=CHR$(99)
18 CALL CHARPAT(42,A$) :: CALL CHAR(100,A$) :: ST$=CHR$(100)
19 RANDOMIZE :: GOTO 188
20 A$="NOT VALID" :: GOTO 32
21 GOSUB 202 :: FR=0
22 A=ASC(SEG$(G$,Q1*8-8+Q2,1))-104 :: B3=-(A>7) :: K3=A-8*B3 :: IF K3>3 THEN K3=K3-4 :: CALL P(Q1,Q2,F$,G$) :: CALL HCHAR(Q1+3,Q2+22,ASC(F$))
23 GOSUB 172 :: IF(S<200)*(K3)THEN A$=ZA$&"LOW" :: GOSUB 168
24 K(1,3),K(2,3),K(3,3)=0 :: Q$=RPT$(CHR$(96),64) :: CALL COLOR(9,2,2) :: CALL P(S1,S2,SH$,Q$)
25 FOR I=1 TO K3 :: GOSUB 158 :: CALL P(Z1,Z2,KL$,Q$) :: K(I,1)=Z1 :: K(I,2)=Z2 :: K(I,3)=190+RA(90) :: NEXT I
26 IF B3 THEN GOSUB 158 :: CALL P(Z1,Z2,SB$,Q$) :: B4=Z1 :: B5=Z2
27 FOR I=1 TO RA(8) :: GOSUB 158 :: CALL P(Z1,Z2,ST$,Q$) :: NEXT I
28 IF D(3)>=0 THEN GOSUB 165
29 CALL HCHAR(15,1,32,320) :: GOSUB 179 :: GOSUB 174
30 GOSUB 177
31 A$="" :: LL=25
32 IF A$<>"" THEN GOSUB 168
33 GOSUB 203 :: EM=MAX(EM-1,-10) :: IF((EM=0)+(EM=-10))*(D(2)<0)THEN GOSUB 171
34 IF(S+E<10)OR(E<10)*(D(7)<0)THEN A$="YOU'RE STRANDED" :: GOSUB 168 :: GOTO 141
35 IF LL>22 THEN LL=25
36 A$=ZC$ :: GOSUB 168 :: ACCEPT AT(LL-1,10)BEEP VALIDATE(CM$)SIZE(1):A$ :: IF A$="" THEN 36
37 QQ=POS(CM$,A$,1) :: IF QQ=2 OR QQ=3 THEN 38 ELSE IF RND>.5 THEN GOSUB 131 ELSE IF(RND>.7)*K3 THEN GOSUB 160
38 IF(QQ=2 OR QQ=3)AND FR=1 AND RND>.3 THEN GOSUB 131
39 ON QQ GOTO 40,78,93,116,128,149,201,143,68
40 A$=ZB$ :: QQ=14 :: GOSUB 184 :: C1=-(JJ=9)-JJ*(JJ<>9)
41 IF C1=0 THEN 33 ELSE IF C1<1 THEN 20
42 A$="SPEED(0-1)?" :: QQ=13 :: GOSUB 184 :: W1=JJ
43 IF W1=0 THEN 33 ELSE IF W1>1 THEN 20
44 IF(D(6)<0)*(W1>.2)THEN A$=D$(6)&"OUT-MAX =.2" :: GOSUB 168 :: GOTO 42
45 NX=INT(W1*8+.6) :: IF E>=NX THEN 47
46 A$="NOT ENOUGH ENERGY" :: GOSUB 168 :: IF(S<NX-E)+(D(7)<0)THEN 33 ELSE A$="USE "&ZA$&"ENERGY" :: GOTO 32
47 GOSUB 160 :: GOSUB 131 :: GOSUB 74 :: CALL P(S1,S2,BL$,Q$)
48 X1,X2=PI*(C1-1)/4 :: X2=COS(X2) :: X1=-SIN(X1) :: X=S1 :: Y=S2 :: C1=Q1*8+Q2
49 FOR I=1 TO NX :: S1=S1+X1 :: S2=S2+X2 :: II=INT(S1+.5) :: JJ=INT(S2+.5)
50 IF(II<1)+(II>8)+(JJ<1)+(JJ>8)THEN 56 ELSE S8=II*8+JJ-8
51 IF SEG$(Q$,S8,1)<>BL$ THEN S1=INT(S1-X1+.5) :: S2=INT(S2-X2+.5) :: C$="BAD NAVIGATION" :: GOSUB 162 :: GOTO 53
52 NEXT I :: S1=II :: S2=JJ
53 CALL P(S1,S2,SH$,Q$) :: GOSUB 67
54 T=T+MIN(1,.1*INT(10*W1))
55 IF T>T0 THEN 142 ELSE GOSUB 174 :: GOSUB 179 :: GOTO 33
56 X=8*Q1+X+NX*X1 :: Y=8*Q2+Y+NX*X2
57 Q1=INT(X/8) :: Q2=INT(Y/8) :: S1=INT(X-Q1*8) :: S2=INT(Y-Q2*8)
58 IF S1=0 THEN Q1=Q1-1 :: S1=8
59 IF S2=0 THEN Q2=Q2-1 :: S2=8
60 QQ=(Q1<1)+(Q1>8)+(Q2<1)+(Q2>8)
61 IF Q1<1 THEN Q1,S1=1 ELSE IF Q1>8 THEN Q1,S1=8
62 IF Q2<1 THEN Q2,S2=1 ELSE IF Q2>8 THEN Q2,S2=8
63 IF QQ THEN C$="BAD COORDINATES" :: GOSUB 162 ELSE 65
64 IF T>T0 THEN 142
65 IF 8*Q1+Q2=Q4 THEN 53
66 T=T+MIN(1,.1*INT(10*W1)) :: IF T>T0 THEN 142 ELSE GOSUB 67 :: GOTO 21
67 E=E-NX-10 :: IF E<0 THEN A$=ZA$&"ENERGY USED" :: S=S+E :: E=0 :: S=MAX(0,S) :: GOTO 170 ELSE RETURN
68 IF D(1)<0 THEN QQ=1 :: GOTO 204
69 A$="QUAD? 1 1" :: GOSUB 168 :: ACCEPT AT(LL-1,7)SIZE(-1)VALIDATE(NM$)BEEP:A$ :: W1=VAL(A$) :: X=W1+Q1
70 ACCEPT AT(LL-1,9)SIZE(-1)VALIDATE(NM$)BEEP:A$ :: C1=VAL(A$) :: Y=C1-Q2
71 IF X=0 AND Y=0 THEN 33
72 NX=INT(8*SQR(X^2+Y^2)+.6) :: IF E<NX THEN 46
73 Q1=W1 :: Q2=C1 :: GOSUB 74 :: GOTO 66
74 FOR R1=1 TO 8 :: IF D(R1)<0 THEN D(R1)=D(R1)+MIN(1,W1) :: IF D(R1)>=0 THEN GOSUB 192
75 NEXT R1 :: IF RND>.2 THEN RETURN ELSE R1=RA(8)
76 II=D(R1) :: IF RND>.6 THEN D(R1)=D(R1)+(RND*3)+1 ELSE D(R1)=D(R1)-(RND*5+1)
77 II=-II*(II<>0)-1*(II=0) :: IF SGN(II)<>SGN(D(R1))THEN 192 ELSE RETURN
78 IF K3<1 THEN 20 ELSE IF RND>.8 THEN GOSUB 160
79 IF D(4)<0 THEN QQ=4 :: GOTO 204 ELSE IF D(8)<0 THEN A$="WARNING-DAMAGE IN "&D$(8) :: GOSUB 168
80 A$="PHASER UNITS?" :: GOSUB 168 :: ACCEPT AT(LL-1,17)BEEP VALIDATE(DIGIT):X
81 IF X<=0 THEN 20 ELSE IF X>E THEN 80 ELSE E=E-X
82 FR=1 :: GOSUB 170 :: IF D(8)<0 THEN X=X*RND
83 A$="LOC: HIT  UNITS LEFT" :: GOSUB 168 :: II=INT(X/K3) :: FOR I=1 TO 3 :: IF K(I,3)THEN CALL SOUND(-1000,1000,0,990,1,900,0)ELSE 91
84 IF D(2)<0 THEN 86 ELSE CALL SPRITE(#3,139,5,8*S1+16,8*S2+16,10*(K(I,1)-S1),10*(K(I,2)-S2))
85 CALL COINC(#3,8*K(I,1)+16,8*K(I,2)+16,30,X) :: IF X THEN CALL SPRITE(#2,137,12,8*(K(I,1)+2),8*(K(I,2)+2))ELSE 85
86 CALL DELSPRITE(#3) :: JJ=INT((II/FND(0))*(RND+2)) :: A$=K$(1)&","&K$(2)&"  "
87 CALL DELSPRITE(#2) :: IF JJ<=.15*K(I,3)THEN A$=A$&"NONE" ELSE A$=A$&STR$(JJ) :: K(I,3)=MAX(K(I,3)-JJ,0) :: IF K(I,3)=0 THEN 89
88 A$=A$&"   "&K$(3) :: GOSUB 168 :: GOTO 91
89 CALL HCHAR(3+K(I,1),3+K(I,2),96) :: GOSUB 163 :: CALL P(K(I,1),K(I,2),BL$,Q$) :: GOSUB 164
90 IF K9=0 THEN 144
91 NEXT I :: IF(RND>.2)THEN GOSUB 131
92 GOTO 33
93 IF(K3<1)+(P<1)THEN 20 ELSE IF D(5)<0 THEN QQ=5 :: GOTO 204
94 A$=TO$&" "&ZB$ :: QQ=22 :: GOSUB 184 :: C1=-(JJ=9)-JJ*(JJ<>9)
95 IF(C1<1)THEN 20
96 X1,X2=PI*(C1-1)/4 :: IF RND>(.9-.3*FR)THEN GOSUB 160
97 FR=1 :: X2=COS(X2) :: X1=-SIN(X1) :: E=E-2 :: X=S1 :: Y=S2 :: P=P-1 :: GOSUB 170
98 II=0 :: IF D(2)>=0 THEN CALL SPRITE(#1,136,12,8*S1+16,8*S2+16,4.6*X1,4.6*X2)
99 X=X+X1 :: Y=Y+X2 :: II=II+1 :: CALL SOUND(-500,-5,0)
100 IF(RND*II>5)THEN A$=DN$&" EXPLODES "&TO$ :: CALL MAGNIFY(2) :: GOTO 109
101 X3=INT(X+.5) :: Y3=INT(Y+.5)
102 IF(X3<1)+(X3>8)+(Y3<1)+(Y3>8)THEN A$="MISSED!" :: GOTO 109
103 A$=SEG$(Q$,X3*8-8+Y3,1) :: IF A$=BL$ THEN 99 ELSE IF A$=KL$ THEN 104 ELSE IF A$=ST$ THEN 108 ELSE IF A$=SB$ THEN 110 ELSE 94
104 CALL MAGNIFY(2) :: GOSUB 203
105 FOR I=1 TO 3 :: IF(X3<>K(I,1))+(Y3<>K(I,2))THEN 107 ELSE CALL HCHAR(3+X3,3+Y3,96)
106 CALL P(X3,Y3,BL$,Q$) :: K(I,3)=0 :: A$="" :: GOSUB 163 :: IF K9 THEN 113 ELSE 144
107 NEXT I :: GOTO 33
108 A$=S$&" ABSORBED "&TO$
109 GOSUB 203 :: GOSUB 168 :: GOTO 114
110 GOSUB 203 :: A$=S$&B$&" DESTROYED!" :: B3=0 :: B9=B9-1 :: GOSUB 168 :: DISPLAY AT(2,11)SIZE(2):USING "##":B9
111 IF B9=0 THEN A$="YOU'RE COURT-MARTIALLED!" :: GOTO 145
112 D0=0 :: CALL HCHAR(X3+3,Y3+3,96) :: CALL P(X3,Y3,BL$,Q$)
113 GOSUB 164
114 IF(RND>(.4-FR*.3))THEN GOSUB 131
115 GOTO 33
116 IF D(7)<0 THEN QQ=7 :: GOTO 204
117 A$="SHIELD UNITS?" :: GOSUB 168 :: ACCEPT AT(LL-1,15)BEEP VALIDATE(DIGIT):X
118 IF(X<0)+(S=X)THEN 33
119 IF E+S-X<0 THEN 20
120 E=E+S-X :: S=X :: GOSUB 170 :: GOTO 33
121 II=0 :: FOR I=1 TO 8 :: II=II-.1*(D(I)<0) :: NEXT I
122 IF II THEN II=INT(MIN(.9,II+RND*.5)*10)/10 ELSE 33
123 A$="REPAIRMEN NEED "&STR$(II)&" STARDATES" :: GOSUB 168
124 A$="ALLOW REPAIRS (Y/N)? Y" :: GOSUB 168 :: ACCEPT AT(LL-1,22)SIZE(-1)VALIDATE("YN")BEEP:A$
125 IF A$<>"Y" THEN 33
126 T=T+II+.1 :: FOR R1=1 TO 8 :: D(R1)=0 :: GOSUB 192 :: NEXT R1
127 CALL HCHAR(15,1,32,320) :: GOSUB 174 :: GOSUB 165 :: GOTO 33
128 DISPLAY AT(15,1):"DEVICE"," STATUS"
129 FOR R1=1 TO 8 :: DISPLAY AT(15+R1,1):D$(R1) :: DISPLAY AT(15+R1,16):USING "-##.##":D(R1) :: NEXT R1
130 FOR II=1 TO 300 :: NEXT II :: A$="" :: LL=25 :: IF D0 THEN 121 ELSE 33
131 IF K3=0 THEN RETURN ELSE IF D0 THEN A$=S$&B$&" PROTECTS US" :: GOTO 168
132 FOR I=1 TO 3 :: IF K(I,3)THEN CALL SOUND(-1000,1020,1,1000,0,980,1) :: H=MAX(INT((K(I,3)/FND(0))*(2+RND)),1)ELSE 140
133 S=S-H :: IF D(2)<0 THEN 136 ELSE CALL SPRITE(#3,139,5,8*K(I,1)+16,8*K(I,2)+16,11*(S1-K(I,1)),11*(S2-K(I,2)))
134 CALL COINC(#3,8*S1+16,8*S2+16,30,X) :: IF X THEN CALL DELSPRITE(#3)ELSE 134
135 CALL SPRITE(#2,137,12,8*S1+16,8*S2+16)
136 IF S<0 THEN CALL DELSPRITE(#2) :: GOTO 141 ELSE GOSUB 170 :: IF S=0 THEN 140
137 IF(H<20)+(RND>.6)+((H/S)<=.02)THEN 140
138 D2=(H/S)+.5*RND :: R1=RA(8) :: II=D(R1) :: D(R1)=II-D2
139 IF SGN(D(R1))<>SGN(II)THEN GOSUB 192
140 CALL DELSPRITE(#2) :: NEXT I :: RETURN
141 A$=CO$&" DESTROYED" :: GOTO 143
142 A$="TIME'S UP"
143 GOSUB 168 :: A$="THE "&DN$&"S WON" :: GOTO 145
144 A$="YOU'VE WON!!!"
145 GOSUB 168
146 A$="AGAIN(Y/N)? Y" :: GOSUB 168
147 ACCEPT AT(LL-1,13)SIZE(-1)BEEP VALIDATE("NY"):A$ :: IF A$="Y" THEN 15
148 CALL CLEAR :: END
149 IF D(8)<0 THEN QQ=8 :: GOTO 204
150 LL=25 :: A$=SEG$(D$(8),1,9)&" "&ZC$ :: GOSUB 168 :: ACCEPT AT(LL-1,20)BEEPSIZE(1):A$
151 IF A$="2" THEN 156 ELSE IF A$<>"1" THEN 150
152 FOR I=1 TO 3 :: IF K(I,3)THEN W1=K(I,1) :: X=K(I,2) :: C1=S1 :: A=S2 :: GOSUB 154
153 NEXT I :: GOTO 33
154 X=X-A :: A=C1-W1 :: IF(X=0)THEN C1=-3*(A>0)-7*(A<0)ELSE C1=1+4*(ATN(A/X)/PI)-4*(X<0)+8*((X>0)*(A<0))
155 C1=INT(C1*100)/100 :: A$=DI$&"= "&STR$(C1) :: GOTO 168
156 IF B3 THEN A$="TO "&S$&B$ :: GOSUB 168 ELSE 20
157 X=B5 :: W1=B4 :: C1=S1 :: A=S2 :: GOSUB 154 :: GOTO 33
158 Z1=RA(8) :: Z2=RA(8) :: IF SEG$(Q$,Z1*8-8+Z2,1)=BL$ THEN RETURN ELSE 158
159 Z3=(SEG$(Q$,INT(Z1+.5)*8-8+INT(Z2+.5),1)=A$) :: RETURN
160 II=0 :: FOR I=1 TO 3 :: IF K(I,3)THEN CALL P(K(I,1),K(I,2),BL$,Q$) :: GOSUB 158 :: K(I,1)=Z1 :: K(I,2)=Z2 :: CALL P(Z1,Z2,KL$,Q$) :: II=1
161 NEXT I :: IF II THEN 176 ELSE RETURN
162 A$=D$(6)&" SHUT DOWN BY" :: GOSUB 168 :: A$=C$ :: GOTO 168
163 A$=A$&" "&DN$&" DESTROYED!" :: GOSUB 168 :: K3=K3-1 :: K9=K9-1 :: DISPLAY AT(2,16)SIZE(2):USING "##":K9 :: GOTO 172
164 CALL P(Q1,Q2,F$,G$) :: CALL HCHAR(Q1+3,Q2+22,ASC(F$)) :: RETURN
165 II=B3 :: JJ=K3 :: FOR I=MAX(Q1-1,1)TO MIN(Q1+1,8) :: FOR J=MAX(Q2-1,1)TO MIN(Q2+1,8) :: CALL GCHAR(I+3,J+22,X1)
166 X1=X1-104 :: B3=-(X1>7) :: K3=X1-8*B3 :: IF K3>3 THEN K3=K3-4 :: CALL P(I,J,F$,G$) :: CALL HCHAR(I+3,J+22,ASC(F$))
167 NEXT J :: NEXT I :: B3=II :: K3=JJ :: RETURN
168 LL=-LL*(LL<25)-15*(LL>=25) :: IF(LL=15)+(LL=19)THEN CALL HCHAR(LL+1,1,32,160)
169 DISPLAY AT(LL,1):A$ :: LL=LL+1 :: RETURN
170 DISPLAY AT(12,14):USING "#### PHAS.=####":E+S,E :: DISPLAY AT(13,9):USING "####  TORPEDOES=##":S,P :: RETURN
171 IF EM<>-10 THEN 177 ELSE EM=10 :: GOTO 177
172 IF K3 THEN II=10 ELSE II=3+ABS(9*(E<300))
173 CALL SCREEN(II) :: RETURN
174 DISPLAY AT(1,20):USING "#,#":S1,S2
175 DISPLAY AT(7,12)SIZE(4):USING "##.#":T0-T
176 FOR II=1 TO 8 :: DISPLAY AT(II+3,2)SIZE(8):SQ$(II) :: NEXT II :: GOTO 170
177 IF D(2)>=0 THEN II=2 ELSE II=15-(EM<=0)
178 CALL COLOR(9,16,II) :: RETURN
179 FOR Z1=MAX(1,S1-1)TO MIN(8,S1+1) :: FOR Z2=MAX(1,S2-1)TO MIN(8,S2+1)
180 A$=SB$ :: GOSUB 159 :: IF Z3 THEN 182
181 NEXT Z2 :: NEXT Z1 :: D0=0 :: RETURN
182 S=0 :: D0=1 :: E=4000 :: P=15 :: GOSUB 170 :: GOSUB 172
183 A$=ZA$&"DROPPED" :: GOTO 168
184 GOSUB 168
185 ON ERROR 184
186 ACCEPT AT(LL-1,QQ)BEEP VALIDATE(NUMERIC):JJ$ :: JJ=VAL(JJ$)
187 IF JJ<0.1 OR JJ>9 THEN 184 ELSE RETURN
188 B9,K9=0 :: LL,P,P0=15 :: E,T=3500 :: T0=T+30 :: S=500 :: FOR I=1 TO 3 :: FOR J=1 TO 3 :: K(I,J)=0 :: NEXT J :: NEXT I
189 Q1=RA(8) :: Q2=RA(8) :: S1=RA(8) :: S2=RA(8) :: EM=-10
190 G$="" :: FOR I=1 TO 64 :: R1=RND :: K3=-(R1>.8)-(R1>.95)-(R1>.98) :: K9=K9+K3 :: B3=MIN(1,-(I=10)-(RND>.96)) :: B9=B9+B3 :: G$=G$&CHR$(108+K3+8*B3) :: NEXT I
191 FOR I=1 TO 8 :: D(I)=0 :: NEXT I :: GOSUB 195 :: GOSUB 174 :: GOTO 21
192 CALL HCHAR(3+R1,19,119+R1-8*(D(R1)<0)) :: CALL SOUND(350,220,0)
193 IF R1=2 THEN 171 ELSE IF R1<>8 THEN RETURN ELSE IF D(8)<0 THEN II,JJ=2 ELSE II=9 :: JJ=8
194 CALL COLOR(10,2,II) :: CALL COLOR(11,2,JJ) :: RETURN
195 DISPLAY AT(1,1)ERASE ALL:"QUAD=","SECT=",S$;" BASES:";STR$(B9);"   ";STR$(K9);" ";DN$;"S"," ";NM$;TAB(21);NM$
196 CALL COLOR(12,2,4) :: CALL COLOR(13,2,9) :: R1=8 :: GOSUB 193
197 DISPLAY AT(4,1):"1";TAB(17);CHR$(120-8*(D(1)<0));"  1";SG$(1)
198 DISPLAY AT(5,1):"2";TAB(12);"TIME ";CHR$(121-8*(D(2)<0));"  2";SG$(2):"3";TAB(12);"LEFT ";CHR$(122-8*(D(3)<0));"  3";SG$(3)
199 FOR II=4 TO 8 :: DISPLAY AT(II+3,1):STR$(II);TAB(17);CHR$(119+II-8*(D(II)<0));"  ";STR$(II);SG$(II) :: NEXT II
200 DISPLAY AT(12,1):"ENERGY: TOT.=",,"SHIELDS=",,RPT$("-",28) :: RETURN
201 GOSUB 195 :: GOSUB 174 :: GOSUB 202 :: GOTO 31
202 DISPLAY AT(1,6)SIZE(3):USING "#,#":Q1,Q2 :: RETURN
203 CALL MAGNIFY(1) :: CALL DELSPRITE(#1) :: RETURN
204 A$=D$(QQ)&"OUT" :: GOTO 32
205 SUB P(A,B,A$,Q$) :: S=INT(A+.5)*8+INT(B+.5)-8 :: Q$=SEG$(Q$,1,S-1)&A$&SEG$(Q$,S+1,65-S) :: SUBEND
