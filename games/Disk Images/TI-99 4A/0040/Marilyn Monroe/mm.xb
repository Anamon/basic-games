100 REM  ******MARILYN*******
110 REM  **BY WALTER MOORE**
120 REM  **MUSIC AND COLOR**         **    ADDED BY   **
130 REM  **STEPHEN FOSTER **
140 REM  **               **
150 REM  **  TI EX/BASIC  **
160 REM  *******************
165 GOSUB 1030 :: J=0
170 CALL CLEAR :: CALL CHARSET :: FOR A=1 TO 14 :: CALL COLOR(A,16,8) :: NEXT A :: CALL SCREEN(9) :: RANDOMIZE :: GOSUB 920 :: DIM A$(10,5),B$(10),B(10)
180 DATA WHO WAS MARILYN'S LEADING   MAN IN "SOME LIKE IT HOT"?,A. AL JOLSON,B. TONY CURTIS,C. BURT REYNOLDS,D. I DON'T KNOW,B
190 DATA MARILYN WAS MARRIED TO,A. ARTHUR MILLER,B. JOE DIMAGGIO,C. JAMES DAUGHERTY,D. ALL OF THE ABOVE,D
200 DATA WHAT YEAR DID MARILYN DIE?,A. 1956,B. 1962,C. 1959,D. 1963,B,WHAT YEAR WAS MARILYN BORN?,A. 1938,B. 1934,C. 1926,D. 1929,C
210 DATA WHAT WAS MARILYN'S REAL NAME,A. NORMA JEAN BAKER,B. NORMA JEAN MORTENSON,C. JEANIE McWILLIAMS,D. BOTH A AND B,D
220 DATA MARILYN DIED FROM,A. SLEEPING PILL OVERDOSE,B. AUTOMOBILE ACCIDENT,C. BOATING ACCIDENT,D. MUGGER IN CENTRAL PARK,A
230 DATA WHAT RELIGIOUS ORGANIZATION DID MARILYN JOIN WHEN SHE   MARRIIED NORMAN MILLER?,A. CATHOLIC,B. BAPTIST,C. JEWISH,D. MUSLIM,C
240 DATA WHO HANDLED THE ARRANGEMENTSFOR MARILYN'S FUNERAL?,A. FOX STUDIO,B. HER MOTHER,C. JOE DIMAGIO,D. ARTHUR MILLER,C
250 DATA WHAT MAN DID MARILYN HAVE ANARGUMENT WITH THE NIGHT     BEFORE SHE DIED?,A. JOE DIMAGIO,B. BOBBY KENNEDY,C. ARTHUR MILLER
260 DATA D. HER AGENT,B
270 DATA AT THE TIME MARILYN BECAME ASTAR HER MOTHER WAS-,A. WARDROBE GIRL AT FOX,B. DEAD,C. LIVING IN ALABAMA,D. IN A MENTAL INSTITUTION,D
280 FOR C=1 TO 10 :: FOR D=1 TO 5 :: READ A$(C,D) :: NEXT D :: READ B$(C) :: NEXT C
290 FOR C=1 TO 10 :: B(C)=0 :: NEXT C :: E=0! START OF RE-ENTRY
300 GOSUB 390 :: GOSUB 840 :: DISPLAY AT(12,13):"MARILYN MONROE" :: DISPLAY AT(14,16):"1926-1962" :: GOSUB 1030
310 CALL HCHAR(1,1,32,768) :: CALL CHARSET :: FOR A=1 TO 14 :: CALL COLOR(A,16,8) :: NEXT A :: FOR C=1 TO 15 :: CALL CLEAR
320 F=INT(RND*10+1) :: IF B(F)=1 THEN 320 :: DISPLAY AT(6,2):A$(F,1) :: DISPLAY AT(12,1):A$(F,2):A$(F,3):A$(F,4):A$(F,5)
330 CALL SOUND(100,440,2) :: CALL SOUND(50,880,2)
340 CALL KEY(0,G,H) :: IF H<=0 THEN 340 :: IF G<65 OR G>68 THEN CALL SOUND(100,110,2) :: GOTO 340 ELSE CALL SOUND(100,770,2)
350 IF CHR$(G)<>B$(F)THEN 370 ELSE B(F)=1 :: E=E+1 :: IF E=5 THEN 380
360 NEXT C :: GOTO 880
370 DISPLAY AT(22,2):"THE CORRECT ANSWER IS ";B$(F) :: FOR I=1 TO 300 :: NEXT I :: GOTO 360
380 GOSUB 390 :: GOSUB 540 :: GOSUB 840 :: GOSUB 930 :: GOTO 890
390 CALL CLEAR :: C$="0003041B28244784" :: CALL CHAR(128,C$) :: CALL HCHAR(2,21,128) :: D$="7F8000F00E0100C0" :: CALL CHAR(129,D$) :: CALL HCHAR(2,22,129)
400 E$="00E0180403009008" :: CALL CHAR(130,E$) :: CALL HCHAR(2,23,130) :: F$="0000000000804020" :: CALL CHAR(131,F$) :: CALL HCHAR(2,24,131)
410 G$="0102020204040404" :: CALL CHAR(132,G$) :: CALL HCHAR(3,20,132) :: H$="0404080810111224" :: CALL CHAR(133,H$) :: CALL HCHAR(3,21,133)
420 I$="20100C0300F01008" :: CALL CHAR(134,I$) :: CALL HCHAR(3,22,134) :: J$="0402018160101030" :: CALL CHAR(135,J$) :: CALL HCHAR(3,23,135)
430 K$="1008080484864504" :: CALL CHAR(136,K$) :: CALL HCHAR(3,24,136) :: L$="0404040404040404" :: CALL CHAR(137,L$) :: CALL HCHAR(4,20,137)
440 M$="2127271010101010" :: CALL CHAR(138,M$) :: CALL HCHAR(4,21,138) :: N$="E0F8F82800000808" :: CALL CHAR(139,N$) :: CALL HCHAR(4,22,139)
450 O$="307271F01008080A" :: CALL CHAR(140,O$) :: CALL HCHAR(4,23,140) :: P$="040408482424224" :: CALL CHAR(141,P$) :: CALL HCHAR(4,24,141)
460 Q$="0404040404483204" :: CALL CHAR(142,Q$) :: CALL HCHAR(5,20,142) :: R$="10121020A0204040" :: CALL CHAR(143,R$) :: CALL HCHAR(5,21,143)
470 S$="0C0D00001F7F007F" :: CALL CHAR(104,S$) :: CALL HCHAR(5,22,104) :: T$="0908090404860588" :: CALL CHAR(105,T$) :: CALL HCHAR(5,23,105)
480 U$="249848A8984F009F" :: CALL CHAR(106,U$) :: CALL HCHAR(5,24,106) :: V$="0000000020C0" :: CALL CHAR(107,V$) :: CALL HCHAR(5,25,107)
490 W$="7820673F1E020206" :: CALL CHAR(108,W$) :: CALL HCHAR(6,20,108) :: X$="0000000203" :: CALL CHAR(109,X$) :: CALL HCHAR(6,21,109)
500 Y$="3F1E000000C3FCFC" :: CALL CHAR(110,Y$) :: CALL HCHAR(6,22,110) :: Z$="14122251C8242010" :: CALL CHAR(111,Z$) :: CALL HCHAR(6,23,111)
510 AA$="403F0000E0" :: CALL CHAR(112,AA$) :: CALL HCHAR(6,24,112) :: BA$="4080" :: CALL CHAR(113,BA$) :: CALL HCHAR(6,25,113)
520 CA$="0408102020404040" :: CALL CHAR(114,CA$) :: CALL HCHAR(7,20,114) :: DA$="0102" :: CALL CHAR(115,DA$) :: CALL HCHAR(7,21,115)
530 EA$="FE03" :: CALL CHAR(116,EA$) :: CALL HCHAR(7,22,116) :: FA$="000080402010080C" :: CALL CHAR(117,FA$) :: CALL HCHAR(7,23,117) :: RETURN! END OF HEAD
540 GA$="0000010102020404" :: CALL CHAR(118,GA$) :: CALL HCHAR(8,19,118) :: HA$="8080808080848484" :: CALL CHAR(119,HA$) :: CALL HCHAR(8,20,119)
550 IA$="0A09" :: CALL CHAR(120,IA$) :: CALL HCHAR(8,23,120) :: JA$="0000808040201008" :: CALL CHAR(121,JA$) :: CALL HCHAR(8,24,121)
560 KA$="0408080808080804" :: CALL CHAR(122,KA$) :: CALL HCHAR(9,19,122) :: LA$="0404040606020202" :: CALL CHAR(123,LA$) :: CALL HCHAR(9,20,123)
570 MA$="00008080C0C06060" :: CALL CHAR(124,MA$) :: CALL HCHAR(9,22,124) :: NA$="0000040404040202" :: CALL CHAR(125,NA$) :: CALL HCHAR(9,23,125)
580 OA$="0601" :: CALL CHAR(126,OA$) :: CALL HCHAR(9,24,126) :: PA$="0000804020201818" :: CALL CHAR(127,PA$) :: CALL HCHAR(9,25,127)
590 CALL HCHAR(10,19,137) :: CALL HCHAR(11,19,137) :: QA$="8281414141202030" :: CALL CHAR(33,QA$) :: CALL HCHAR(10,20,33)
600 RA$="00000000008080C0" :: CALL CHAR(34,RA$) :: CALL HCHAR(10,21,34) :: SA$="6060703030381818" :: CALL CHAR(35,SA$) :: CALL HCHAR(10,22,35)
610 TA$="020101" :: CALL CHAR(36,TA$) :: CALL HCHAR(10,23,36) :: UA$="180C8F8F8F4F4C48" :: CALL CHAR(37,UA$) :: CALL HCHAR(10,24,37)
620 VA$="2020E0C080" :: CALL CHAR(38,VA$) :: CALL HCHAR(10,25,38) :: WA$="10180808080C0404" :: CALL CHAR(39,WA$) :: CALL HCHAR(11,20,39)
630 XA$="4020201010080C04" :: CALL CHAR(40,XA$) :: CALL HCHAR(11,21,40) :: YA$="1C0C0E0607070301" :: CALL CHAR(41,YA$) :: CALL HCHAR(11,22,41)
640 ZA$="5870303030301008" :: CALL CHAR(42,ZA$) :: CALL HCHAR(11,24,42) :: AB$="0404020202020202" :: CALL CHAR(43,AB$) :: CALL HCHAR(12,19,43)
650 BB$="0303030303020404" :: CALL CHAR(44,BB$) :: CALL HCHAR(12,20,44) :: CB$="0202818181828284" :: CALL CHAR(45,CB$) :: CALL HCHAR(12,21,45)
660 DB$="8040404020201010" :: CALL CHAR(46,DB$) :: CALL HCHAR(12,23,46) :: EB$="4884020202020101" :: CALL CHAR(47,EB$) :: CALL HCHAR(12,24,47)
670 FB$="0202010101010101" :: CALL CHAR(48,FB$) :: CALL HCHAR(13,19,48) :: GB$="0101010101010101" :: CALL CHAR(78,GB$) :: CALL HCHAR(13,24,78)
680 HB$="0303030303020404" :: CALL CHAR(49,HB$) :: CALL HCHAR(13,20,49) :: IB$="04081010102020" :: CALL CHAR(50,IB$) :: CALL HCHAR(13,21,50)
690 JB$="0808080404020101" :: CALL CHAR(51,JB$) :: CALL HCHAR(13,23,51) :: KB$="0000000000010204" :: CALL CHAR(52,KB$) :: CALL HCHAR(14,19,52)
700 LB$="8890604080000408" :: CALL CHAR(53,LB$) :: CALL HCHAR(14,20,53) :: MB$="0100402010080402" :: CALL CHAR(54,MB$) :: CALL HCHAR(14,23,54)
710 NB$="80C0C0C0E0E0C0C0" :: CALL CHAR(55,NB$) :: CALL HCHAR(14,24,55) :: OB$="8080808080808080" :: CALL CHAR(56,OB$) :: CALL HCHAR(14,25,56)
720 PB$="0808101010202020" :: CALL CHAR(57,PB$) :: CALL HCHAR(15,19,57) :: QB$="1010202020404040" :: CALL CHAR(58,QB$) :: CALL HCHAR(15,20,58)
730 RB$="C080814141211111" :: CALL CHAR(59,RB$) :: CALL HCHAR(15,24,59) :: SB$="8080" :: CALL CHAR(60,SB$) :: CALL HCHAR(15,25,60)
740 TB$="2020202010100808" :: CALL CHAR(61,TB$) :: CALL HCHAR(16,19,61) :: CALL HCHAR(16,20,61) :: UB$="0A0C040404060202" :: CALL CHAR(77,UB$) :: CALL HCHAR(16,24,77)
750 VB$="080804040201" :: CALL CHAR(62,VB$) :: CALL HCHAR(17,19,62) :: WB$="08080404020180C0" :: CALL CHAR(79,WB$) :: CALL HCHAR(17,20,79)
760 XB$="0000000000008040" :: CALL CHAR(81,XB$) :: CALL HCHAR(17,21,81) :: YB$="0201010101" :: CALL CHAR(63,YB$) :: CALL HCHAR(17,24,63)
770 ZB$="0000000000808080" :: CALL CHAR(64,ZB$) :: CALL HCHAR(17,25,64) :: AC$="F0F0E0E0C0808080" :: CALL CHAR(65,AC$) :: CALL HCHAR(18,20,65)
780 BC$="2010080402020202" :: CALL CHAR(66,BC$) :: CALL HCHAR(18,21,66) :: CC$="8080808080404040" :: CALL CHAR(67,CC$) :: CALL HCHAR(18,25,67)
790 DC$="0101010101010101" :: CALL CHAR(68,DC$) :: CALL HCHAR(19,19,68) :: CALL HCHAR(19,21,63) :: CALL HCHAR(19,22,64)
800 EC$="4040202020201010" :: CALL CHAR(69,EC$) :: CALL HCHAR(19,25,69) :: FC$="0101020202040404" :: CALL CHAR(70,FC$) :: CALL HCHAR(20,19,70)
810 GC$="4020201010181424" :: CALL CHAR(71,GC$) :: CALL HCHAR(20,22,71) :: HC$="1010101010080808" :: CALL CHAR(72,HC$) :: CALL HCHAR(20,25,72)
820 IC$="0404040404080808" :: CALL CHAR(73,IC$) :: CALL HCHAR(21,19,73) :: JC$="2222414040808080" :: CALL CHAR(74,JC$) :: CALL HCHAR(21,22,74)
830 KC$="0000008040402020" :: CALL CHAR(75,KC$) :: CALL HCHAR(21,23,75) :: LC$="0808080808080808" :: CALL CHAR(76,LC$) :: CALL HCHAR(21,25,76) :: RETURN
840 MC$="FFFFFFFFFFFFFFFF" :: CALL CHAR(88,MC$) :: CALL VCHAR(4,5,88,7) :: CALL VCHAR(4,11,88,7) :: CALL VCHAR(5,6,88) :: CALL VCHAR(5,10,88)
850 CALL VCHAR(6,7,88) :: CALL VCHAR(6,9,88) :: CALL VCHAR(7,8,88)
860 CALL VCHAR(15,5,88,7) :: CALL VCHAR(15,11,88,7) :: CALL VCHAR(16,6,88) :: CALL VCHAR(16,10,88) :: CALL VCHAR(17,7,88) :: CALL VCHAR(17,9,88)
870 CALL VCHAR(18,8,88) :: RETURN
880 CALL CLEAR :: DISPLAY AT(8,11):"SORRY" :: DISPLAY AT(12,2):"THAT'S ALL THE TRIES YOU GET" :: FOR C=1 TO 500 :: NEXT C :: GOTO 890
890 CALL CLEAR :: CALL CHARSET :: DISPLAY AT(10,10):"AGAIN (Y/N)"
900 J=0 :: CALL KEY(0,G,H) :: IF H=0 THEN 900 ELSE IF G=89 THEN 290 ELSE CALL CLEAR :: STOP
920 DIM K(26) :: L=262 :: FOR M=1 TO 25 :: K(M)=INT(L*1.059463094^M) :: NEXT M :: K(26)=40000 :: RETURN
930 RESTORE 940
940 DATA 3,9,1,6,4,2,4,6,4,9,8,14,3,18,1,16,4,14,4,6,4,8,8,9,2,9,2,9,6,18,2,16,4,14,8,13
950 DATA 3,11,1,13,4,14,4,14,4,9,4,6,4,2,3,9,1,6,4,2,4,6,4,9,8,14
960 DATA 3,18,1,16,4,14,4,6,4,8,8,9,2,9,2,9,6,18,2,16,4,14,8,13
970 DATA 3,11,1,13,4,14,4,14,4,9,4,6,4,2,2,18,2,18,4,18,4,19,4,21,8,21
980 DATA 2,19,2,18,4,16,4,18,4,19,8,19,2,19,2,19,6,18,2,16,4,14,8,13
990 DATA 2,11,2,13,4,14,4,6,4,8,8,9,2,9,2,9,4,14,4,14,2,14,2,13
1000 DATA 4,11,4,11,4,11,4,16,2,19,2,18,2,16,2,14,4,14,4,13
1010 DATA 2,9,2,9,6,14,2,16,2,18,2,19,8,21,2,14,2,16,6,18,2,19,4,16,8,14,8,14
1020 FOR N=1 TO 104 :: READ O,M :: CALL SOUND(O*120,K(M),0,K(M)+5,5) :: NEXT N :: RETURN
1030 P=85
1040 J=J+1 :: FOR Q=1 TO 2 :: CALL SOUND(P,277,0,277,30,734,30,-4,0) :: CALL SOUND(P,294,0) :: CALL SOUND(P,277,0) :: CALL SOUND(P,294,0)
1050 CALL SOUND(P,392,0,392,30,550,30,-4,0) :: CALL SOUND(P,247,0) :: CALL SOUND(P,294,0) :: CALL SOUND(P,392,0) :: NEXT Q
1060 CALL SOUND(P,277,0,277,30,734,30,-4,0) :: CALL SOUND(P,294,0) :: CALL SOUND(P,277,0) :: CALL SOUND(P,294,0)
1070 CALL SOUND(P,392,0,392,30,550,30,-4,0) :: CALL SOUND(P,233,0) :: CALL SOUND(P,220,0) :: CALL SOUND(P,392,0) :: FOR N=1 TO 2
1080 CALL SOUND(P,196,0,196,30,734,30,-4,0) :: CALL SOUND(P,196,0) :: CALL SOUND(P,392,0) :: CALL SOUND(P,196,0)
1090 CALL SOUND(P,294,0,294,30,550,30,-4,0) :: CALL SOUND(P,196,0) :: CALL SOUND(P*2,147,0)
1100 CALL SOUND(P,165,0,165,30,617,30,-4,0) :: CALL SOUND(P,165,0) :: CALL SOUND(P*2,330,0)
1110 CALL SOUND(P,247,0,247,30,617,30,-4,0) :: CALL SOUND(P,247,0) :: CALL SOUND(P*2,196,0)
1120 CALL SOUND(P,147,0,147,30,617,30,-4,0) :: CALL SOUND(P,165,0) :: CALL SOUND(P,330,0) :: CALL SOUND(P,392,0)
1130 CALL SOUND(P,330,0,330,30,617,30,-4,0) :: CALL SOUND(P,196,0) :: CALL SOUND(P,165,0) :: CALL SOUND(P,330,0)
1140 CALL SOUND(P,196,0,196,30,617,30,-4,0) :: CALL SOUND(P,294,0) :: CALL SOUND(P,392,0) :: CALL SOUND(P,233,0)
1150 CALL SOUND(P,247,0,247,30,617,30,-4,0) :: CALL SOUND(P,196,0) :: CALL SOUND(P,165,0) :: CALL SOUND(P,294,0) :: NEXT N
1160 CALL SOUND(P,196,0,196,30,734,30,-4,0) :: CALL SOUND(P,294,0) :: CALL SOUND(P,392,0) :: CALL SOUND(P,233,0)
1170 CALL SOUND(P,247,0,247,30,550,30,-4,0) :: CALL SOUND(P,196,0) :: CALL SOUND(P,165,0) :: CALL SOUND(P,294,0)
1180 CALL SOUND(P,147,0,147,30,823,30,-4,0) :: CALL SOUND(P,147,0) :: CALL SOUND(P,277,0) :: CALL SOUND(P,294,0)
1190 CALL SOUND(P,392,0,392,30,550,30,-4,0) :: CALL SOUND(P,294,0) :: CALL SOUND(P,294,0) :: CALL SOUND(P,392,0)
1200 CALL SOUND(P,277,0,277,30,823,30,-4,0) :: CALL SOUND(P,294,0) :: CALL SOUND(P,277,0) :: CALL SOUND(P,294,0)
1210 CALL SOUND(P,392,0,392,30,550,30,-4,0) :: CALL SOUND(P,233,0) :: CALL SOUND(P,220,0) :: CALL SOUND(P,392,0)
1220 CALL SOUND(P,196,0,196,30,734,30,-4,0) :: CALL SOUND(P,294,0) :: CALL SOUND(P,392,0) :: CALL SOUND(P,233,0)
1230 CALL SOUND(P,247,0,247,30,550,30,-4,0) :: CALL SOUND(P,196,0) :: CALL SOUND(P,165,0) :: CALL SOUND(P,294,0)
1240 CALL SOUND(P,196,0,196,30,734,30,-4,0) :: CALL SOUND(P,196,0) :: CALL SOUND(P*2,294,0,392,0)
1250 CALL SOUND(P,247,0,247,30,550,30,-4,0) :: CALL SOUND(P,247,0) :: CALL SOUND(P*2,294,0,392,0) :: IF J=3 THEN RETURN ELSE GOTO 1040
