100 CALL CLEAR :: CALL CHARSET :: CALL SCREEN(2) :: RANDOMIZE :: CALL MAGNIFY(3) :: CALL CHARPAT(89,Y$) :: CALL CHAR(74,Y$)
110 CALL COLOR(3,7,11,4,7,11,5,5,8,6,5,8,7,5,8,1,16,2,2,13,11,8,4,15,11,2,16)
120 CALL CHAR(119,"080C0B083878783",81,"",95,"",124,"",125,"0E1115111F38777F",126,"",127,"7088A888F81CEEFE")
130 CALL CHAR(92,"1833777F7E7C7839391C0E47A78FFF7F0080C0E0202020A022257FFF0780C2FE")
140 CALL CHAR(136,"000103070404040544A4FEFFE001437F18CCEEFE7E3E1E9C9C3870E2E5F1FFFE")
150 CALL CHAR(106,"18247E16F7E7C7FF",40,"4B4B4B4B4B4B4B4B012452ACB6DBBFFFF8A4DAFAE8DAF4E110461AA4532E1B57",118,"30787838080B0C08")
160 CALL CHAR(107,"18247E5ED7C3F7FF",44,"089228D5564AAF6DF0C4E9B4CAFBFDFF270B532F97B7EFFF",116,"FFFAF2E2C2828282")
170 CALL CHAR(36,"FF818181FF000000FF81818181FF0000FF8181818181FF00FF818181818181FF",33,"FFFF",34,"FF81FF",35,"FF8181FF")
180 CALL CHAR(88,"FFFDDB6D354A2480872F5B172F5B251FFFF7EDE9F4CAB0E4FFBFDF532D97230F")
190 CALL CHAR(117,"FF5F4F4743414141",140,"0101010101010101FF403F100F0403018080808080808080FF02FC08F020C08")
200 CALL CHAR(60,"0E1115111F3D777BFCFFFF7F7F3F1F0F7088A888F8B8EEDE3FFFFFFEFEFCF8E",104,"18247E76E7F73CFF",105,"18247E66F7EFECFF")
210 CALL CHAR(128,"071F3F716EEFEDF7F9FFFF7F7F3F1F07E0F8FCC6829B93C7FFFFE5C194FCFCE")
220 CALL CHAR(132,"071F3F6341D9C9E3FFFFA783293F3F07E0F8FC8E76F7B7EF9FFFFFFEFEFCF8E")
230 CALL CHAR(59,"6C547EC6FEFE7C38",108,"03060C0C1F3F7F7FFFFFFF7F7F3F1F07C020E0A0F8ECFEDEE0FFFFFEFEFCF8E")
240 CALL CHAR(112,"03040705071F377F7B07FF7F7F3F1F07C0603030F8FCFEFEFFFFFFFEFEFCF8E")
250 CALL CHAR(96,"072838290978F8FFBFC0F1F1F9FD7F2AE014DCF4B0DE1FFFFD038F8F9FBFFE54")
260 CALL CHAR(120,"07283B2F0D7BF8FFBFC0F1F1F9FD7F25E0141C94901E1FFFFD038F8F9FBFFE54")
270 CALL CHAR(58,"",100,"1E232333231F0373DB8F0703318BC77F000000000080848AC8C8E8F8F8FCFEFF")
280 SC,BO,CO=0 :: ME=3 :: LE,WA=1 :: CALL CHAR(104,"00000000000121511313171F1F3F7FFF78C4C4CCC4F8C0CEDBF1E0C08CD1E3FE")
290 DISPLAY AT(2,1):"ZXXX[ Z[ ZXXXX[ ZXXXX[ ZXXX[*+),Y *Y *+)),Y -),+). *+)).*Y *Y *Y *Y  *Y   *Y   *Y   *Y *Y *Y *Y  *Y   *Y   *[X["
300 DISPLAY AT(6,1):"*Y *Y *Y *Y  *Y   *Y   *+). *Y *Y *Y *Y  *Y   *Y   *Y   *Y *[XZY *[XXZY   *Y   *[XX[-. -))). -)))).   -.   -)))."
310 CALL HCHAR(20,1,81,160)
320 DISPLAY AT(12,1):"!       !    !!! ''' ! ! ' '#       #    # #  '  # # ' ' $     $     $ $  &  $$$ & & %     %  %  %%%  %  % % %%%"
330 DISPLAY AT(16,1):"  & & &  $ $ &&   $  & &  $   ' ' '  # # ' '          #   '''''   !  '  ' !!!!!!!!!"
340 DISPLAY AT(20,1):"QQQQQQFROMQQRQTRUEMANQQQQQQQQQQQQQQQTHEQBADDIESQQQQQQQQQ1QROBOIDSQQQ2QSLUGQCREATURES3QGRUMPIESQQ4QMADQDOGSQQQQQQ" :: GOSUB 1090
350 CALL KEY(0,K,S) :: IF S=0 THEN CALL SOUND(-90,(RND*20)+110,19) :: GOTO 350
360 CALL KEY(0,K,S) :: IF S=-1 THEN CALL SOUND(-90,(RND*20)+110,19) :: GOTO 360 ELSE CALL HCHAR(20,1,81,160) :: DISPLAY AT(20,1):"SQANDQDQTOQMOVEQQLEAPQWITHQP"
370 DISPLAY AT(21,1):"WHENQUNDERQLARGESTQPANELSQTOGOQTOQHIGHERQFLOORQQQPICKQUPALLQNOTESQFORQAQBIGGERQBONUS" :: GOSUB 1090
380 CALL KEY(0,K,S) :: IF S=0 THEN CALL SOUND(-90,(RND*20)+110,19) :: GOTO 380 ELSE CALL CLEAR :: CALL COLOR(1,10,16) :: CALL SCREEN(16)
390 CALL VCHAR(3,1,42,22) :: CALL VCHAR(3,31,42,22) :: CALL VCHAR(3,2,89,22) :: CALL VCHAR(3,32,89,22) :: FOR Y=3 TO 23 STEP 5
400 CALL HCHAR(Y,2,91) :: CALL HCHAR(Y+1,2,43) :: CALL HCHAR(Y,31,90) :: CALL HCHAR(Y+1,31,44) :: NEXT Y
410 DISPLAY AT(1,1):"QQMEN";TAB(14);"SCORE";SC:"LEVEL";LE;TAB(14);"BONUS";LE*10 :: CALL HCHAR(1,9,59,ME) :: ON WA GOTO 420,510,560,610
420 DISPLAY AT(3,1):"XXXXXXXXXXXXXXXXXXXXXXX[''ZX))))))))))))))))))tu))).  -)                                 vv w v  w   vw  w  w   "
430 DISPLAY AT(8,1):"X[''ZXXXXXXXXXX[$$ZXXXXXXXXX).  -))tu)))))).  -)tu))tu))                                v   wvv     w  v    v"
440 DISPLAY AT(13,1):"XXXX[''&&%%$$ZXX[&&##%%ZXXXX)))).        -)).      -))))                               v   w  w    v ww  w v w"
450 DISPLAY AT(18,1):"XXXXXXXX[''Z[$$ZXXXX[!!''!!Z))))))tu.  -.  -))tu.      -                               w ww   vv  w  v  v  wv"
460 RESTORE 930
470 DISPLAY AT(23,1):"XXXXXXXXXXXXXXXXXXXXXXXXXXXX))))))))))))))))))))))))))))"
480 FOR Y=2 TO 7 :: READ A,B :: CALL SPRITE(#Y,140,14,A*8+1,B*8+1) :: NEXT Y :: READ A,B,D,FT,HT :: CALL SPRITE(#8,HT,D,A,B,0,1+LE)
490 READ A,B :: M=A :: N=B :: CALL SPRITE(#1,108,9,M,N)
500 CALL KEY(0,K,S) :: IF S=0 THEN CALL SOUND(-90,(RND*2000)+2000,10) :: GOTO 500 ELSE 710
510 DISPLAY AT(3,1):"XXXXXXXXXX[''ZXXXXXXXXXXXXXX))))))))tu.  -))))))))))))))                             wv w vww    v    ww   v  v"
520 DISPLAY AT(8,1):"XXXXXXXXXXXX[''&&%%$$####!!Z)))tu)))))tu.              -                               vv  wv w   vwww  v  w v"
530 DISPLAY AT(13,1):"XXXXXXXXXXXXXXX[''ZX[$$&&ZXX))tutu)))))))tu.  -).    -))                             wv    wv w         v   vv"
540 DISPLAY AT(18,1):"X[''##!!''&&ZXXXX[&&$$ZX[''Z).          -)))).    -).  -                              v w  v   wwv       vv   w"
550 RESTORE 940 :: GOTO 470
560 DISPLAY AT(3,1):"X[''ZX[&&ZXXX[##%%ZXXXXXXXXX).  -).  -))).    -)))))))))                             wv   v   wwvw   vvv  wv v"
570 DISPLAY AT(8,1):"XXXXXXXXXXXXXXX[!!%%''%%!!ZX)))))))tututu)).          -)                              wvwvv       wvv  w  w  v"
580 DISPLAY AT(13,1):"[##''%%ZXXXXXXXXXXXXXXXXXXXX.      -))tu))tu))))))))))))                                 vvv  www    vv v   www"
590 DISPLAY AT(18,1):"X[''ZXXXXXXXXXX[''ZXXX[$$&&Z).  -)))))))))).  -)tu.    -                                vwvwv   w vv   wwv   v"
600 RESTORE 950 :: CALL SPRITE(#9,128,15,41,220,0,1+LE) :: GOTO 480
610 DISPLAY AT(3,1):"XXXXXXXXXXXXXXXXXXXXXX[''ZXX))))))))))tu)tu)tu)tu).  -))                             v  wwv   wv vw vv ww    wv"
620 DISPLAY AT(8,1):"X[''ZXXXXXXXXXXXXXXXXXXXXXXX).  -))))tu)))))))))tu))))))                             wv  v   w  v wv w  w  w v"
630 DISPLAY AT(13,1):"X[$$%%ZXX[&&ZXXXX[##!!ZX[''Z).    -)).  -)))).    -).  -                             w v  vw   wvw    wvwv"
640 DISPLAY AT(18,1):"X[''$$ZXX[##Z[%%ZXXXX[!!%%ZX).    -)).  -.  -)))).    -)                             wv   w  w v   wwv   vw  wv"
650 RESTORE 960 :: CALL SPRITE(#9,92,5,161,1,0,3+LE) :: GOTO 480
660 CALL MOTION(#1,0,0) :: CALL PATTERN(#1,60)
670 Y=(RND*18)+2 :: IF Y>7 THEN 690 ELSE CALL POSITION(#Y,A,B) :: CALL LOCATE(#Y,A+8,B) :: CALL PEEK(-31877,O) :: IF O AND 32 THEN 970
680 CALL LOCATE(#Y,A,B) :: GOTO 710
690 IF Y<17 THEN 710 :: IF Y<18 THEN 700 :: CALL MOTION(#8,0,-1+(LE-(LE*2)),#9,0,-1+(LE-(LE*2))) :: CALL PATTERN(#8,FT,#9,FT) :: GOTO 710
700 CALL MOTION(#8,0,1+LE,#9,0,1+LE) :: CALL PATTERN(#8,HT,#9,HT)
710 CALL PEEK(-31877,O) :: IF O AND 32 THEN 970
720 CALL KEY(0,K,S) :: IF S=0 THEN 660 ELSE ON POS("PpSDsd",CHR$(K),1)+1 GOTO 660,770,770,730,750,730,750
730 CALL POSITION(#1,A,B) :: IF B<20 THEN CALL MOTION(#1,0,0) :: GOTO 670 ELSE CALL MOTION(#1,0,-4) :: CALL PATTERN(#1,112)
740 K=INT(A/8)+1 :: Y=INT(B/8)+1 :: CALL GCHAR(K,Y,O) :: IF O<118 THEN 670 ELSE GOSUB 990 :: CALL HCHAR(K,Y,32) :: GOTO 670
750 CALL POSITION(#1,A,B) :: IF B>220 THEN CALL MOTION(#1,0,0) :: GOTO 670 ELSE CALL MOTION(#1,0,4) :: CALL PATTERN(#1,108)
760 K=INT(A/8)+1 :: Y=INT(B/8)+3 :: CALL GCHAR(K,Y,O) :: IF O<118 THEN 670 ELSE GOSUB 990 :: CALL HCHAR(K,Y,32) :: GOTO 670
770 CALL MOTION(#1,0,0) :: CALL POSITION(#1,M,N) :: CALL GCHAR(M/8-2,N/8+1,O) :: IF(O>33)*(O<40)THEN 780 ELSE 670
780 CALL GCHAR(M/8-2,N/8+2,P) :: IF P<>O THEN 670 ELSE CALL COLOR(#1,10) :: Y=O :: O=M-42 :: T=M/8-2
790 IF M<17 THEN 1050 ELSE M=M-7 :: CALL LOCATE(#1,M,N) :: Y=Y-1 :: CALL HCHAR(T,N/8+1,Y,2) :: IF Y=33 THEN 800 ELSE 790
800 IF M=O THEN 830 ELSE CALL PEEK(-31877,K) :: IF K AND 32 THEN 930
810 FOR Y=M TO O+42 :: CALL PATTERN(#1,108,#1,112) :: CALL LOCATE(#1,Y,N) :: CALL PATTERN(#1,60) :: NEXT Y :: M=Y :: CALL COLOR(#1,9)
820 GOTO 670
830 CALL COLOR(#1,9) :: M=M+2 :: CALL LOCATE(#1,M,N) :: GOTO 670
840 CO=11 :: CALL HCHAR(18,14,32,3) :: CALL HCHAR(19,14,32,3) :: CALL SPRITE(#1,60,9,121,141,#15,108,9,121,1)
850 CALL SPRITE(#14,92,8,121,16,#13,128,11,121,32,#12,104,5,121,48,#11,96,14,121,64,0,8)
860 CALL COINC(#CO,121,113,4,O) :: IF O=-1 THEN 870 ELSE 860
870 CALL MOTION(#CO,16,0) :: FOR Y=610 TO 110 STEP-50 :: CALL SOUND(-60,Y,0) :: NEXT Y :: CALL DELSPRITE(#CO) :: CO=CO+1
880 IF CO<15 THEN CALL MOTION(#CO,0,8) :: GOTO 860 ELSE CALL MOTION(#15,0,8)
890 CALL COINC(#1,#15,16,O) :: IF O=0 THEN 890 ELSE CALL MOTION(#15,0,0) :: CALL PATTERN(#1,112)
900 CALL CHAR(100,"1C3E7FFFFFFFFFFF7F7F3F1F0F070100387CFEFFFFFFFFFFFEFEFCF8F0E08") :: CALL SPRITE(#9,100,7,100,132,-2,0)
910 ME=ME+1 :: FOR Y=1 TO 7 :: FOR T=610 TO 1110 STEP 50 :: CALL SOUND(-50,T,0) :: NEXT T :: CALL HCHAR(1,9,32,8) :: CALL HCHAR(1,9,59,ME)
920 NEXT Y :: CALL DELSPRITE(ALL) :: CALL CHAR(100,"1E232333231F0373DB8F0703318BC77F000000000080848AC8C8E8F8F8FCFEFF") :: GOTO 410
930 DATA 3,20,8,9,8,26,8,22,18,8,18,20,121,129,14,120,96,161,81
940 DATA 3,10,8,12,8,5,13,4,13,6,13,15,161,1,5,100,104,161,209
950 DATA 8,9,8,11,8,13,13,12,13,16,18,22,41,100,11,132,128,161,192
960 DATA 3,12,3,15,3,18,3,21,8,11,8,22,121,192,8,136,92,161,209
970 Y=1 :: CALL SOUND(-90,-7,0) :: SC=SC+BO :: DISPLAY AT(1,19):SC :: CALL MOTION(#1,0,0) :: CALL PATTERN(#1,124) :: BO,CO=0 :: ME=ME-1
980 CALL COLOR(#1,(RND*13)+2) :: Y=Y+1 :: IF Y<20 THEN 980 :: CALL DELSPRITE(ALL) :: CALL HCHAR(1,9+ME,32) :: IF ME=0 THEN 1000 ELSE 410
990 BO=BO+(LE*10) :: T=(RND*2000)+1000 :: CALL SOUND(-50,T,0) :: RETURN
1000 CALL DELSPRITE(#1,#7) :: FOR Y=10 TO 16 :: CALL HCHAR(Y,10,81,14) :: NEXT Y :: DISPLAY AT(11,10)SIZE(10):"GAMEQQOVER" :: HI=MAX(HI,SC)
1010 DISPLAY AT(13,10):"HIGH"; :: DISPLAY AT(13,15):"Q"&STR$(HI)&"Q"; :: DISPLAY AT(15,9)SIZE(12):"REPLAJQJQ/QN"
1020 CALL KEY(0,K,S) :: IF K=78 OR K=110 THEN CALL DELSPRITE(ALL) :: CALL CLEAR :: RUN "DSK1.MENU" ELSE IF K=121 OR K=89 THEN 1030 ELSE 1020
1030 FOR Y=1 TO 20 :: CALL SCREEN(RND*13+2) :: NEXT Y :: CALL SCREEN(16) :: ME=3 :: SC,BO,CO=0 :: LE,WA=1
1040 CALL DELSPRITE(ALL) :: CALL CLEAR :: GOTO 390
1050 CALL DELSPRITE(#1,#8,#9) :: SC=SC+(LE*1000) :: FOR Y=1 TO 21 STEP 2 :: CALL SOUND(-90,2000,Y) :: NEXT Y :: DISPLAY AT(1,19):SC
1060 DISPLAY AT(2,19):BO :: FOR Y=1 TO 10 :: CALL HCHAR(2,21,32,8) :: DISPLAY AT(2,19):BO :: CALL SOUND(-10,(2000)+2000,0) :: NEXT Y
1070 SC=SC+BO :: DISPLAY AT(1,19):SC :: BO=0 :: DISPLAY AT(2,19):BO
1080 LE=LE+1 :: WA=WA+1 :: CALL DELSPRITE(ALL) :: IF WA<5 THEN 410 ELSE WA=1 :: GOTO 840
1090 DISPLAY AT(24,1)BEEP:"QQPRESSQSOMETHINGQTOQSTARTQQ" :: RETURN
