100 REM TI EXTENDED BASIC
190 CALL MAGNIFY(4):: RANDOMIZE :: DIM TILE(16),TEMP(16):: TEMP(16)=16 :: FR=153
200 CALL CLEAR :: CALL SCREEN(11):: CALL CHARSET :: CALL CHAR(35,"0",71,RPT$("0",12)&"FF0000FF")
210 DISPLAY AT(1,9):RPT$("G",12):: DISPLAY AT(2,9):"OPTION##MENU"
220 DISPLAY AT(3,9):RPT$("H",12):: DISPLAY AT(10,4):"PRESS####FOR" :: DISPLAY AT(11,4):"HHHHH####HHH"
230 DISPLAY AT(13,6):"1######NUMBER#PUZZLE" :: DISPLAY AT(16,6)BEEP:"2######LETTER#PUZZLE"
240 WASTE=RND :: CALL KEY(0,K,ST):: IF ST=0 THEN 240
250 IF K=49 THEN I=0 ELSE IF K=50 THEN I=1 ELSE IF K=7 THEN 700 ELSE CALL SOUND(150,110,0):: GOTO 240
260 CALL CLEAR :: CALL SCREEN(4):: IF I=0 THEN RESTORE 710 ELSE RESTORE 790
270 FOR I=80 TO 136 STEP 4 :: READ A$,B$ :: CALL CHAR(I,"FFFF"&A$&"FFFFFFFF"&B$&"FFFF"):: NEXT I :: CALL CHAR(140,RPT$("0",64))
280 CALL CHAR(71,"000000000000000030303030303030300000FFFF")
290 CALL CHAR(74,"00003F3F303030300000FCFC0C0C0C0C303030303F3F00000C0C0C0CFCFC",78,RPT$("0C",8)&"00000000FFFF")
300 RESTORE 870 :: FOR I=38 TO 47 :: READ A$ :: CALL CHAR(I,A$):: NEXT I
310 CALL COLOR(5,15,2,6,15,2):: CALL HCHAR(2,7,71,20):: DISPLAY AT(3,5):"GJ"&RPT$("I",16)&"KG"
320 FOR I=4 TO 16 STEP 4 :: DISPLAY AT(I,1):RPT$("####GH"&RPT$("G",16)&"NG####",4):: NEXT I
330 DISPLAY AT(20,5):"GL"&RPT$("O",16)&"MG" :: CALL HCHAR(21,7,71,20)
340 GOSUB 890 :: FOR I=1 TO 15 :: TILE(I)=I :: NEXT I
350 FOR J=1 TO 15 :: R=1+INT(RND*(16-J)):: TEMP(J)=TILE(R):: TILE(R)=TILE(16-J):: NEXT J
360 N=0 :: FOR I=1 TO 14 :: FOR J=1 TO 15-I :: IF TEMP(I)>TEMP(I+J)THEN N=N+1
370 NEXT J :: NEXT I :: IF N/2<>INT(N/2)THEN TEMP(16)=TEMP(15):: TEMP(15)=TEMP(14):: TEMP(14)=TEMP(16):: TEMP(16)=16
380 FOR I=1 TO 16 :: TILE(I)=TEMP(I):: NEXT I :: N=0 :: SP=16
390 FOR I=22 TO 124 STEP 34 :: FOR J=62 TO 164 STEP 34 :: N=N+1 :: CALL LOCATE(#TILE(N),I,J):: NEXT J :: NEXT I
400 MOVE$="" :: TOTAL=0 :: DISPLAY AT(24,1):CHR$(32+6*DIR)&"#####()*+#,-(.+/:#0#######"&CHR$(39-7*NO):: CALL SOUND(150,666,0):: GOTO 430
410 CALL SOUND(150,110,0)
420 WASTE=RND :: IF K=73 OR K=78 OR K=105 OR K=110 THEN 450
430 CALL KEY(1,KK,ST):: IF KK=18 THEN 670 ELSE CALL JOYST(1,X,Y):: IF ABS(X)+ABS(Y)=8 OR X+Y=0 THEN 450
440 IF X/4=(-1)^(1-DIR)THEN 510 ELSE IF X/4=(-1)^(2-DIR)THEN 550 ELSE IF Y/4=(-1)^(2-DIR)THEN 630 ELSE IF Y/4=(-1)^(1-DIR)THEN 590
450 CALL KEY(0,K,ST):: IF ST=0 THEN 430 ELSE IF K=45 THEN 670 ELSE IF K=83-HORZ OR K=115-HORZ THEN 510
460 IF K=68+HORZ OR K=100+HORZ THEN 550 ELSE IF K=88-VERT OR K=120-VERT THEN 590 ELSE IF K=69+VERT OR K=101+VERT THEN 630
470 IF K=6 THEN CALL HCHAR(24,4,32,26):: GOSUB 890 :: GOTO 380 ELSE IF K=7 THEN 700
480 IF K=15 THEN CALL DELSPRITE(ALL):: GOTO 200 ELSE IF K=14 THEN CALL HCHAR(24,4,32,26):: GOTO 340 ELSE IF ST=-1 THEN 420
490 IF K=78 OR K=110 THEN NO=1-NO :: FR=153+NO*30000 :: CALL HCHAR(24,30,39-7*NO):: GOTO 420
500 IF K=73 OR K=105 THEN HORZ=15-HORZ :: VERT=19-VERT :: DIR=1-DIR :: CALL HCHAR(24,3,32+6*DIR):: GOTO 420 ELSE 410
510 IF SP=1 OR SP=5 OR SP=9 OR SP=13 THEN 410 ELSE SP=SP-1 :: CALL POSITION(#TILE(SP),ROW,COL):: CALL SOUND(4000,FR,14*NO)
520 IF MINUS=0 THEN MOVE$="L"&MOVE$ ELSE MINUS=0
530 FOR I=COL TO COL+34 STEP 2 :: CALL LOCATE(#TILE(SP),ROW,I):: NEXT I
540 TILE(SP+1)=TILE(SP):: TILE(SP)=16 :: CALL SOUND(-1,FR,30):: GOTO 690
550 IF SP=4 OR SP=8 OR SP=12 OR SP=16 THEN 410 ELSE SP=SP+1 :: CALL POSITION(#TILE(SP),ROW,COL):: CALL SOUND(4000,FR,14*NO)
560 IF MINUS=0 THEN MOVE$="R"&MOVE$ ELSE MINUS=0
570 FOR I=COL TO COL-34 STEP -2 :: CALL LOCATE(#TILE(SP),ROW,I):: NEXT I
580 TILE(SP-1)=TILE(SP):: TILE(SP)=16 :: CALL SOUND(-1,FR,30):: GOTO 690
590 IF SP>12 THEN 410 ELSE SP=SP+4 :: CALL POSITION(#TILE(SP),ROW,COL):: CALL SOUND(4000,FR,14*NO)
600 IF MINUS=0 THEN MOVE$="D"&MOVE$ ELSE MINUS=0
610 FOR I=ROW TO ROW-34 STEP -2 :: CALL LOCATE(#TILE(SP),I,COL):: NEXT I
620 TILE(SP-4)=TILE(SP):: TILE(SP)=16 :: CALL SOUND(-1,FR,30):: GOTO 690
630 IF SP<5 THEN 410 ELSE SP=SP-4 :: CALL POSITION(#TILE(SP),ROW,COL):: CALL SOUND(4000,FR,14*NO)
640 IF MINUS=0 THEN MOVE$="U"&MOVE$ ELSE MINUS=0
650 FOR I=ROW TO ROW+34 STEP 2 :: CALL LOCATE(#TILE(SP),I,COL):: NEXT I
660 TILE(SP+4)=TILE(SP):: TILE(SP)=16 :: CALL SOUND(-1,FR,30):: GOTO 690
670 IF MOVE$="" THEN 410 ELSE MINUS=1 :: K=ASC(MOVE$):: MOVE$=SEG$(MOVE$,2,250):: TOTAL=TOTAL-2
680 IF K=82 THEN 510 ELSE IF K=76 THEN 550 ELSE IF K=85 THEN 590 ELSE IF K=68 THEN 630
690 TOTAL=TOTAL+1 :: DISPLAY AT(24,19)SIZE(4)BEEP:TOTAL :: MOVE$=SEG$(MOVE$,1,250):: GOTO 420
700 CALL DELSPRITE(ALL):: CALL CLEAR :: END
710 DATA FEFEFEFEFEFEFEFEFEFEFEFE,7F7F7F7F7F7F7F7F7F7F7F7F,F8F0F3FFFFFFFEFCF8F1F0F0,1F0FCFCF8F1F3F7FFFFF0F0F
720 DATA F8F0F3FFFFFEFEFFFFF3F0F8,1F0FCFCF8F1F1F8FCFCF0F1F,FFFFFEFCF8F1F0F0FFFFFFFF,8F0F0F4FCFCF0F0FCFCFCFCF
730 DATA F0F0F3F3F0F0FFFFFFF3F0F8,1F1FFFFF3F1F8FCFCF8F1F3F,FCF8F1F3F0F0F1F3F3F1F8FC,1F1FFFFF3F1F8FCFCF8F1F3F
740 DATA F0F0F3FFFFFFFFFEFEFEFEFE,0F0FCF8F9F1F3F3F7F7F7F7F,FCF8F9F9FCF8F1F3F3F1F8FC,3F1F9F9F3F1F8FCFCF8F1F3F
750 DATA FCF8F1F3F3F1F8FCFFFFF8F8,3F1F8FCFCF8F0F0FCF8F1F3F,CFCECCCCCCCCCCCCCCCCCECF,0F0763F3F3F3F3F3F363070F
760 DATA F3F3F3F3F3F3F3F3F3F3F3F3,CFCFCFCFCFCFCFCFCFCFCFCF,CECCCCCFCFCFCFCFCECCCCCC,0703F3F3E3C78F1F3F7F0303
770 DATA CECCCCCFCFCFCFCFCFCCCCCE,0703F3F3E38787E3F3F30307,CFCFCFCFCECCCCCCCFCFCFCF,E3C3831333730303F3F3F3F3
780 DATA CCCCCCCCCCCCCFCFCFCCCCCE,0707FFFF0F07E3F3F3E3070F
790 DATA FEFCF8F1E3E7E0E0E7E7E7E7,7F3F1F8FC7E70707E7E7E7E7,E0E0E7E7E7E0E0E7E7E7E0E0,1F0FC7E7C70F0FC7E7C70F1F
800 DATA F8F0E3E7E7E7E7E7E7E3F0F8,0F07E7FFFFFFFFFFFFE7070F,E0E0E7E7E7E7E7E7E7E7E0E0,3F1F8FC7E7E7E7E7C78F1F3F
810 DATA E0E0E7E7E7E0E0E7E7E7E0E0,0707FFFFFF1F1FFFFFFF0707,E0E0E7E7E7E0E0E7E7E7E7E7,0707FFFFFF1F1FFFFFFFFFFF
820 DATA F8F0E3E7E7E7E7E7E7E3F0F8,0F07E7FFFFFF8787E7E70707,E7E7E7E7E7E0E0E7E7E7E7E7,E7E7E7E7E70707E7E7E7E7E7
830 DATA F8F8FEFEFEFEFEFEFEFEF8F8,1F1F7F7F7F7F7F7F7F7F1F1F,FFFFFFFFFFFFFFFFE7E3F0F8,E7E7E7E7E7E7E7E7E7C70F1F
840 DATA E7E7E7E6E4E0E0E0E6E7E7E7,C78F1F3F7FFFFF7F3F1F8FC7,E7E7E7E7E7E7E7E7E7E7E0E0,FFFFFFFFFFFFFFFFFFFF0707
850 DATA E7E3E1E0E4E6E7E7E7E7E7E7,E7C787072767E7E7E7E7E7E7,E7E3E1E0E4E6E6E7E7E7E7E7,E7E7E7E7E76767270787C7E7
860 DATA F8F0E3E7E7E7E7E7E7E3F0F8,1F0FC7E7E7E7E7E7E7C70F1F
870 DATA 3060FF0000FF060C,0E09080868F8F86,00446C54444444,007C444444447C,0044444444281,007C407840407C
880 DATA 00446454544C44,00444444444438,00784478444478,00784444784844
890 FOR I=1 TO 16 STEP 2 :: CALL SPRITE(#I,76+4*I,16,193,1,#I+1,80+4*I,11,193,1):: NEXT I :: RETURN
