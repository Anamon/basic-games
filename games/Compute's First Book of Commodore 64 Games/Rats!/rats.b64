2 REM DISK USERS SAVE WITH THE FILENAME RATS
3 PRINT CHR$(142):GX=49152:GOTO 38
4 REM DRAW 3-D VIEW
5 N=2:A=H:B=V:FF=2^(F-1):SYS IN
6 Z=M%(A,B)*FF:IF ((Z/16) AND 1)=1 THEN RL=-1:GOSUB 25:GOTO 8
7 W=M%(A+S,B-R)*FF:IF ((W/128) AND 1)=1 THEN RL=-1:GOSUB 21
8 IF ((Z/64) AND 1)=1 THEN RL=1:GOSUB 25:GOTO 10
9 W=M%(A-S,B+R)*FF:IF ((W/128) AND 1)=1 THEN RL=1:GOSUB 21
10 IF ((Z/128) AND 1)=1 THEN 14
11 N=N+1:IF N>8 THEN 15
12 A=A+R:B=B+S:IF B<2 THEN 15
13 GOTO 6
14 GOSUB 17
15 RETURN
16 REM DRAW CENTER BACK
17 POKE HX,VX+DX(N):POKE HY,YU(N):SYS PL:POKE HY,YD(N):SYS LI
18 POKE HX,VX-DX(N):SYS LI:POKE HY,YU(N):SYS LI:POKE HX,VX+DX(N):SYS LI
19 RETURN
20 REM DRAW BACK SIDE
21 POKE HX,VX+RL*DX(N-1):POKE HY,YU(N):SYS PL:POKE HX,VX+RL*DX(N):SYS LI
22 POKE HY,YD(N):SYS LI:POKE HX,VX+RL*DX(N-1):SYS LI
23 RETURN
24 REM DRAW RIGHT OR LEFT SIDE
25 POKE HX,VX+RL*DX(N-1):POKE HY,YU(N-1):SYS PL:POKE HX,VX+RL*DX(N)
26 POKE HY,YU(N):SYS LI:POKE HY,YD(N):SYS LI:POKE HX,VX+RL*DX(N-1)
27 POKE HY,YD(N-1):SYS LI:POKE HY,YU(N-1):IF N>2 THEN SYS LI
28 RETURN
29 REM GET KEYBOARD CHARACTER
30 GET A$:IF A$="" THEN 30
31 RETURN
37 REM INITIALIZE
38 HX=828:HY=829:LINE=12288:PLOT=12665:INIT=12685:SCR=12725
39 FL=12726:FH=12730:TL=12734:TH=12738
40 PRINT "{CLR}{5 DOWN}{17 RIGHT}RATS!
41 PRINT "{2 DOWN}{3 RIGHT}SOLVE A MAZE FROM A RAT'S EYE VIEW
42 INPUT "{3 DOWN}{7 RIGHT}MAZE SIZE (H,V){3 SPACE}3,3{5 LEFT}";H,V
43 IF H<3 OR H>15 OR V<3 OR V>15 THEN 40
44 PRINT "{CLR}{DOWN}PLEASE WAIT...
45 IF PEEK(LI)=32 AND PEEK(LI+1)=33 AND PEEK(LI+2)=48 THEN 48
46 CK=0:FOR L=12288 TO 12761:READ A:POKE L,A:CK=CK+A:NEXT:FORK=GXTOGX+23:READGX
47 POKEK,GX:NEXT:IF CK<>50144 THEN PRINT "{DOWN}ERROR IN DATA STATEMENTS":STOP
48 N=H*V-1:H=H+1:V=V+1:D=1
49 DIM M%(17,17),WALK(100),CUT(5),DX(8),YU(8),YD(8)
50 FOR J=1 TO V+1:M%(1,J)=4:M%(H+1,J)=1:NEXT
51 MX=79:MY=49:VX=39:VY=24:X=VX
52 FOR J=1 TO 8:DX(J)=X:YU(J)=INT(VY-X*VY/VX):YD(J)=INT(VY+X*(MY-VY)/VX)
53 X=INT(X*7/10):NEXT
54 FOR I=2 TO H:M%(I,V+1)=8:M%(I,1)=2:FOR J=2 TO V:M%(I,J)=15:NEXT:NEXT
55 R=INT(H/2)+1:S=INT(V/2)+1:M%(R,S)=15
56 PRINT "{CLR}{DOWN}GENERATING MAZE...";:GOSUB 2000
57 REM GENERATE RANDOM MAZE (ALGORITHM FROM ROGERS AND STRASSBERGER)
58 FOR IWALK=1 TO N
59 I=Z
60 IF M%(R-1,S)>14 THEN I=I+1:CUT(I)=1
61 IF M%(R,S-1)>14 THEN I=I+1:CUT(I)=2
62 IF M%(R+1,S)>14 THEN I=I+1:CUT(I)=3
63 IF M%(R,S+1)>14 THEN I=I+1:CUT(I)=4
64 IF I=0 THEN 75
65 IF I<>1 THEN I=INT(RND(1)*I)+1
66 ON CUT(I) GOTO 67,69,71,73
67 M%(R,S)=M%(R,S)-(M%(R,S) AND 1):R=R-1
68 M%(R,S)=M%(R,S)-((M%(R,S)/4) AND 1)*4:GOTO 86
69 M%(R,S)=M%(R,S)-((M%(R,S)/8) AND 1)*8:S=S-1
70 M%(R,S)=M%(R,S)-((M%(R,S)/2) AND 1)*2:GOTO 86
71 M%(R,S)=M%(R,S)-((M%(R,S)/4) AND 1)*4:R=R+1
72 M%(R,S)=M%(R,S)-(M%(R,S) AND 1):GOTO 86
73 M%(R,S)=M%(R,S)-((M%(R,S)/2) AND 1)*2:S=S+1
74 M%(R,S)=M%(R,S)-((M%(R,S)/8) AND 1)*8:GOTO 86
75 IF D=-1 THEN 79
76 IF R<>H THEN 83
77 IF S<>V THEN 82
78 R=2:S=2:GOTO 84
79 IF R<>2 THEN 83
80 IF S<>V THEN 82
81 R=H:S=2:GOTO 84
82 S=S+1:D=-D:GOTO 84
83 R=R+D
84 IF M%(R,S)=15 THEN 75
85 GOTO 59
86 NEXT IWALK
87 MH=H:MV=V:I=INT(RND(1)*(MH-1))+2
88 M%(I,1)=0:M%(I,2)=M%(I,2)-((M%(I,2)/8) AND 1)*8
89 H=INT(RND(1)*(MH-1))+2:H1=H:V1=V
90 PRINT "{CLR}{DOWN}MAZE COMPLETED.":GOSUB 2000:GOTO 105
91 REM DISPLAY TOP VIEW OF MAZE
92 HZ=INT(79/MH):VZ=INT(49/MV)
93 SYS IN:POKE 214,24:PRINT TAB(25);"{UP}{9 SPACE}{HOME}";
94 POKE HX,1+HZ:POKE HY,1+VZ:SYS PL:POKE HY,MV*VZ+1:SYS LI
95 FOR J=1 TO MV:FOR I=2 TO MH:N=M%(I,J):X=I*HZ+1:Y=J*VZ+1
96 IF ((N/2) AND 1)=1 THEN POKE HX,X:POKE HY,Y:SYS PL:POKE HX,X-HZ:SYS LI
97 IF ((N/4) AND 1)=1 THEN POKE HX,X:POKE HY,Y:SYS PL:POKE HY,Y-VZ:SYS LI
98 NEXT:NEXT
99 RETURN
100 REM MARK PLAYER'S POSITION
101 X=H*HZ-1:Y=V*VZ-1:POKE HX,X+1:POKE HY,Y+1:SYS PL
102 POKE HX,X-HZ+2:POKE HY,Y-VZ+2:SYS LI:POKE HY,Y+2:SYS PL
103 POKE HX,X+2:POKE HY,Y-VZ+2:SYS LI
104 RETURN
105 FOR X=1 TO MH:FOR Y=1 TO MV:M%(X,Y)=M%(X,Y)+M%(X,Y)*16:NEXT:NEXT
106 REM PLAY
107 F=INT(RND(1)*4)+1:ON F GOTO 108,109,110,111
108 R=0:S=-1:GOTO 112
109 R=+1:S=0:GOTO 112
110 R=0:S=+1:GOTO 112
111 R=-1:S=0
112 PRINT "{CLR}{DOWN}PRESS {RVS}J{OFF} TO TURN LEFT
113 PRINT "{DOWN}PRESS {RVS}L{OFF} TO TURN RIGHT
114 PRINT "{DOWN}PRESS {RVS}SPACE{OFF} TO GO FORWARD
115 PRINT "{DOWN}PRESS {RVS}M{OFF} TO DISPLAY TOP VIEW OF MAZE
116 PRINT "{3 DOWN}{RVS} PRESS ANY KEY TO CONTINUE "
117 GOSUB 30:PRINT "{CLR}";:SYS49152:GOSUB 5
118 REM GET KEYSTROKE
119 GOSUB 30
120 ON -(A$="J")-2*(A$="L")-3*(A$=" ")-4*(A$="M") GOTO 122,124,131,136
121 GOSUB2000:GOTO 112
122 F=F-1:IF F<1 THEN F=4
123 GOTO 125
124 F=F+1:IF F>4 THEN F=1
125 ON F GOTO 126,127,128,129
126 R=0:S=-1:GOTO 130
127 R=+1:S=0:GOTO 130
128 R=0:S=+1:GOTO 130
129 R=-1:S=0
130 GOTO 135
131 Z=M%(H,V):T=Z*2^(F-1):T=(T/128) AND 1:IF T=1 THEN GOSUB 2000:GOTO 119
132 NM=NM+1:POKE 214,24:PRINT TAB(25);"{UP}MOVE";NM;"{HOME}";
133 IF NM<100 THEN WALK(NM)=F
134 H=H+R:V=V+S:IF V<2 THEN 147
135 GOSUB 5:GOTO 119
136 IF NOT MS THEN 138
137 POKE FL,218:POKE FH,49:POKE TL,0:POKE TH,128:SYS SC:GOTO 139
138 GOSUB 92:POKE FL,0:POKE FH,128:POKE TL,218:POKE TH,49:SYS SC:MS=-1
139 GOSUB 101:PRINT "{HOME}YOU ARE FACING ";: ON F GOTO 140,141,142,143
140 PRINT "NORTH";:GOTO 144
141 PRINT "EAST";:GOTO 144
142 PRINT "SOUTH";:GOTO 144
143 PRINT "WEST";
144 PRINT ".{2 SPACE}PRESS ANY KEY TO":PRINT "CONTINUE":GOSUB 30
145 PRINT "{HOME}{39 SPACE}":PRINT "{8 SPACE}"
146 GOSUB 5:GOTO 119
147 GOSUB2000:V=V1:H=H1:IF MS THEN POKE FL,218:POKE FH,49:POKE TL,0:POKE TH,128
148 IF MS THEN SYS SC:GOTO 150
149 GOSUB 92
150 GOSUB 101
151 PRINT "{HOME}{DOWN}CONGRATULATIONS-YOU'RE OUT IN";NM;"STEP!{LEFT}{INS}S"
152 REM DRAW PATH WALKED
153 POKE HX,H*HZ-HZ/2+1:POKE HY,V*VZ-VZ/2+1:SYS PL
154 FOR N=1 TO NM:IF N>100 THEN 158
155 F=WALK(N):V=V+(F=1)-(F=3):H=H+(F=4)-(F=2)
156 POKE HX,H*HZ-HZ/2+1:POKE HY,V*VZ-VZ/2+1:SYS LI
157 NEXT
158 PRINT:END
160 DATA 32, 33, 48, 173, 58, 3, 133, 2 
170 DATA 173, 59, 3, 133, 195, 32, 0, 49
180 DATA 173, 62, 3, 205, 63, 3, 16, 8
190 DATA 240, 6, 32, 173, 48, 76, 3, 48
200 DATA 96, 169, 128, 24, 109, 60, 3, 56
210 DATA 237, 58, 3, 141, 63, 3, 169, 128
220 DATA 24, 109, 61, 3, 56, 237, 59, 3
230 DATA 141, 64, 3, 162, 128, 142, 66, 3
240 DATA 142, 69, 3, 232, 142, 67, 3, 142
250 DATA 68, 3, 173, 63, 3, 201, 128, 176
260 DATA 11, 169, 127, 141, 68, 3, 169, 0
270 DATA 56, 237, 63, 3, 41, 127, 141, 63
280 DATA 3, 173, 64, 3, 201, 128, 176, 11
290 DATA 169, 127, 141, 67, 3, 169, 0, 56
300 DATA 237, 64, 3, 41, 127, 141, 64, 3
310 DATA 173, 63, 3, 205, 64, 3, 176, 32
320 DATA 174, 63, 3, 172, 64, 3, 142, 64
330 DATA 3, 140, 63, 3, 173, 68, 3, 141
340 DATA 66, 3, 173, 67, 3, 141, 69, 3
350 DATA 169, 128, 141, 67, 3, 141, 68, 3
360 DATA 173, 63, 3, 74, 141, 65, 3, 169
370 DATA 0, 141, 62, 3, 96, 173, 68, 3
380 DATA 56, 233, 128, 24, 109, 58, 3, 141
390 DATA 58, 3, 173, 69, 3, 56, 233, 128
400 DATA 24, 109, 59, 3, 141, 59, 3, 173
410 DATA 65, 3, 24, 109, 64, 3, 141, 65
420 DATA 3, 238, 62, 3, 173, 65, 3, 205
430 DATA 63, 3, 48, 35, 240, 33, 56, 237
440 DATA 63, 3, 141, 65, 3, 173, 66, 3
450 DATA 56, 233, 128, 24, 109, 58, 3, 141
460 DATA 58, 3, 173, 67, 3, 56, 233, 128
470 DATA 24, 109, 59, 3, 141, 59, 3, 96
480 DATA 169, 0, 133, 168, 169, 32, 133, 196
490 DATA 165, 2, 201, 80, 176, 56, 165, 195
500 DATA 201, 50, 176, 50, 234, 234, 234, 234
510 DATA 70, 2, 38, 168, 106, 38, 168, 133
520 DATA 195, 10, 10, 101, 195, 10, 10, 38
530 DATA 196, 10, 38, 196, 234, 234, 234, 133
540 DATA 195, 166, 168, 189, 99, 49, 133, 168
550 DATA 164, 2, 177, 195, 162, 15, 221, 103
560 DATA 49, 240, 4, 202, 16, 248, 96, 173
570 DATA 98, 49, 240, 6, 138, 5, 168, 170
580 DATA 208, 8, 138, 73, 255, 5, 168, 73
590 DATA 255, 170, 189, 103, 49, 164, 2, 145
600 DATA 195, 96, 1, 1, 2, 4, 8, 32
610 DATA 126, 123, 97, 124, 226, 255, 236, 108
620 DATA 127, 98, 252, 225, 251, 254, 160, 234
630 DATA 0, 173, 60, 3, 141, 58, 3, 133
640 DATA 2, 173, 61, 3, 141, 59, 3, 133
650 DATA 195, 32, 0, 49, 96, 162, 128, 160
660 DATA 0, 134, 254, 132, 253, 177, 253, 41
670 DATA 127, 201, 64, 48, 2, 169, 32, 145
680 DATA 253, 200, 208, 241, 232, 224, 132, 208
690 DATA 232, 169, 0, 170, 157, 58, 3, 232
700 DATA 224, 12, 208, 248, 96, 169, 218, 133
710 DATA 251, 169, 49, 133, 252, 169, 0, 133
720 DATA 253, 169, 128, 133, 254, 162, 4, 160
730 DATA 0, 177, 251, 145, 253, 136, 208, 249
740 DATA 230, 252, 230, 254, 202, 48, 2, 208
750 DATA 240, 96
1000 DATA 162, 0, 169, 1, 157, 0, 216, 157
1010 DATA 0, 217, 157, 0, 218, 157, 0, 219
1020 DATA 232, 208, 241, 96, 234, 234, 234, 0
2000 S0=54272:FORE=S0TOS0+28:POKEE,0:NEXT
2010 POKE54296, 15 :POKE54277, 51 :POKE54278, 211
2020 POKE 54276, 33 :POKE 54273, 63 :POKE54272, 75
2030 FORT=1TO 200 :NEXT:POKE54276, 32:FORT=1TO 100:NEXT 
2040 FORE=S0TOS0+28:POKEE,0:NEXT
2050 RETURN
